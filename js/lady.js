var Lady = {};
// generated by script update-ladyjs.php
Lady.rules = {"parser":"(?:(?:<\\?php)|((?:^|\\?>)(?:[^<]|<[^?])*(?=<\\?|$))|(?:\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\s\\S][^'\\\\]*)*')|(?:\/\/|\\#)[^\\n]*(?=\\n)|\/\\*(?:[^*]|\\*(?!\/))*\\*\/|(?:[a-zA-Z0-9_]\\w*))","closure":"(^|[^>.$]|[^-]>)F[S\\s]*\\(","tokens":{"A":"case|default","D":"[0-9].*","E":"self","F":"function","I":"['\"]_*[a-z][a-zA-Z0-9_]*['\"]","J":"and|as|extends|implements|instanceof|insteadof|x?or","K":"break|continue|end(?:declare|for(?:each)?|if|switch|while)?|false|null|return|true","L":"callable|catch|class|clone|const|declare|do|echo|else(?:if)?|for(?:each)?|global|goto|if|include(?:_once)?|interface|namespace|new|print|private|require(?:_once)?|switch|throw|trait|try|use|var|while|yield|array|binary|bool(?:ean)?|double|float|int(?:eger)?|object|real|string|unset","M":"private|protected|public|final|abstract","P":"<\\?php","R":"parent","S":"[\/\\#][\\w\\W]*","T":"this","U":"static","V":"_*[a-z]\\w*|GLOBALS|_SERVER|_REQUEST|_POST|_GET|_FILES|_ENV|_COOKIE|_SESSION","H":"['\"][\\w\\W]*","C":"_*[A-Z].*"},"dictionary":{"case":"A","class":"[CERU]","eol":"(?:\\n|$)","eos":"[S\\s]*(\\n|$)(?![S\\s]*([\\])\\.\\-+:=\/%*&|>,\\{?]|<[^?]|J))","function":"F","key":"[AEFJKLMPRTUV]","keyword":"[AFJKLMPRU]","leading":"[FJL]","methodprefix":"[MU][MSU\\s]*","noesc":"^|[^\\\\]","noprop":"^|[^>$\\\\]|[^-]>","phptag":"P","self":"E","space":"[S\\s]","string":"[HI]","this":"T","var":"[TV]"},"toPhp":{"(([$\\\\]|->)keyword)":"$2V","(^|[^\\?:S\\s\\\\]):(space)":"$1 =>$2","(^|[,[(]space*)key(\\s?=>)":"$1'I'$2","(noesc)@@":"$1self::","(noesc)@":"$1$this->","\\.([^.=D])":"->$1","(class)->":"$1::","(noesc)~":"$1.","(noprop)(var(?!space*\\())":"$1$$2","(string|[A-RT-Z\\]\\)\\-\\+]|[^\\{;S\\s]\\})(eos)":"$1;$2","((?:noprop)leading|P);(space*eol)":"$1$2","(case[^\\n]*)\\s\\=>":"$1:","<\\?(?!ph[p]\\b|=)":"<?php","(methodprefix)(var,space*\\()":"$1function $2","\\\\([~@$])":"$1"},"toLady":{"([@~])":"\\\\$1","(->|\\$)\\$":"$1\\\\$","(^|[,[(]space*)(\\$var,space*=>)":"$1\\\\$2","\\$this->":"@N","self::":"@@N","\\.(?![=D])":"~","->":".","(class)::":"$1.","(noesc)\\$(var(?!space*\\())":"$1$2","\\$(keyword)":"$V","I(\\s?=>)":"Y$1","(^|[^S\\s])\\s?=>(\\s)":"$1:$2","phptag":"N<?","(methodprefix)function(?:space)(space*var)":"$1N$2","\\\\\\$":"$",";(space*eol)":"$1"}};

Lady.toPhp = function(input) {
  return Lady.convert(input, false);
};

Lady.toLady = function(input) {
  return Lady.convert(input, true);
};

Lady.convert = function(code, toLady) {
  var rules = Lady.rules[toLady ? 'toLady' : 'toPhp'];
  var values = [], brackets = [];
  var parser = new RegExp(Lady.rules.parser, 'g');
  code = code.toString().replace(parser, function (code, html) {
    values.push(code);
    if (html) return 'H';
    for (name in Lady.rules.tokens) {
      var pattern = new RegExp('^(' + Lady.rules.tokens[name] + ')$');
      if (code.match(pattern) !== null) return name;
    }
    return 'N';
  });
  code = code.replace(/([^{}]*)([{}])/g, function (token, code, bracket) {
    if (bracket == '{') {
      brackets.push(code.match(new RegExp(Lady.rules.closure)));
      return token;
    } else {
      return code + (brackets.pop() ? 'B' : bracket);
    }
  });
  for (var i in rules) {
    var pattern = i.replace(/([a-z]{3,}),?/g, function(s, id) {
      return Lady.rules.dictionary[id];
    });
    var replacement = rules[i].replace(/\\\$/, '$');
    code = code.replace(new RegExp(pattern, 'g'), function(x, a, b) {
      return replacement.replace(/\$1/, a).replace(/\$2/, b);
    });
  }
  return code.replace(/[A-Z]/g, function (n) {
    if (n == 'B') return '}';
    var value = values.shift();
    return (n == 'N') ? '' : (n == 'Y' ? value.substring(1, value.length - 1) : value);
  });
};

if (typeof(module) !== 'undefined') {
  module.exports = Lady;
}

